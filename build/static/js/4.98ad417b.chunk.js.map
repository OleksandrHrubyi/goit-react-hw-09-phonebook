{"version":3,"sources":["components/ErrorPopup/ErrorPopup.jsx","components/ErrorPopup/errorPopup.module.css","components/PhonebookForm/phonebookForm.module.css","components/ContactList/contactList.module.css","components/Filter/filter.module.css","components/Main/main.module.css","redux/Contacts/contactsOperations.js","redux/Contacts/contactsSelectors.js","components/PhonebookForm/PhonebookForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.js","components/Main/Main.jsx"],"names":["ErrorPopup","text","className","styles","popup","module","exports","uuidv4","require","v4","defaultModules","set","PNotifyMobile","getAllContacts","state","contacts","items","getFilterState","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","el","name","includes","connect","sameContact","dispatch","onSubmit","value","user","id","number","addContactsRequest","uploadContacts","then","response","addContactsSucces","catch","error","addContactsError","alert","addContactsOperation","getContacts","getContactsRequest","getContactsSucces","getContactsError","useState","setName","setNumber","errorSameName","setErrorSameName","errorName","setErrorName","errorNumber","setErrorNumber","useEffect","handleChange","event","target","console","log","container","Form","form","e","preventDefault","length","setTimeout","find","Group","controlId","Label","Control","type","onChange","placeholder","mask","Button","variant","block","CSSTransition","in","unmountOnExit","timeout","classNames","arr","onDel","deleteContactRequest","removeContacts","deleteContactSucces","deleteContactError","deleteContactOperation","TransitionGroup","component","map","item","href","onClick","filterContact","label","input","filterStyles","ContactList"],"mappings":"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","file":"static/js/4.98ad417b.chunk.js","sourcesContent":["import styles from \"./errorPopup.module.css\";\nimport PropTypes from \"prop-types\";\nfunction ErrorPopup({ text }) {\n  return (\n    <div className={styles.popup}>\n      <h1>{text}</h1>\n    </div>\n  );\n}\n\nErrorPopup.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default ErrorPopup;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"errorPopup_popup__1LU-F\",\"enter\":\"errorPopup_enter__1A6xR\",\"enterActive\":\"errorPopup_enterActive__LO9Qe\",\"exit\":\"errorPopup_exit__ZiYjm\",\"exitActive\":\"errorPopup_exitActive__3eRCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"phonebookForm_enter__3ETj-\",\"enterActive\":\"phonebookForm_enterActive__25BGR\",\"exit\":\"phonebookForm_exit__1iftJ\",\"exitActive\":\"phonebookForm_exitActive__2S6Wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"contactList_name__3nM-v\",\"number\":\"contactList_number__PxfHE\",\"item\":\"contactList_item__1Zfmy\",\"enter\":\"contactList_enter__29KRA\",\"enterActive\":\"contactList_enterActive__3ZojL\",\"exit\":\"contactList_exit__2IyBh\",\"exitActive\":\"contactList_exitActive__3LBAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3DTWP\",\"input\":\"filter_input__1g0Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"main_enter__3DH9G\",\"enterActive\":\"main_enterActive__6SOd4\",\"exit\":\"main_exit__2HktF\",\"exitActive\":\"main_exitActive__1MzoH\"};","import { uploadContacts, getContacts, removeContacts } from \"../../service\";\nimport { alert, defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nimport {\n  addContactsRequest,\n  addContactsSucces,\n  addContactsError,\n  getContactsRequest,\n  getContactsSucces,\n  getContactsError,\n  deleteContactRequest,\n  deleteContactSucces,\n  deleteContactError,\n} from \"./contactAction\";\n\nconst { v4: uuidv4 } = require(\"uuid\");\ndefaultModules.set(PNotifyMobile, {});\n\nexport const addContactsOperation = (value) => (dispatch) => {\n  const user = {\n    id: uuidv4(),\n    name: value.name,\n    number: value.number,\n  };\n\n  dispatch(addContactsRequest());\n  uploadContacts(user)\n    .then((response) => dispatch(addContactsSucces(response)))\n    .catch((error) => {\n      dispatch(addContactsError(error));\n      alert({\n        text: error,\n      });\n    });\n};\n\nexport const getContactsOperation = (_) => (dispatch) => {\n  dispatch(getContactsRequest());\n  getContacts()\n    .then((response) => dispatch(getContactsSucces(response)))\n    .catch((error) => {\n      dispatch(getContactsError(error));\n      alert({\n        text: error,\n      });\n    });\n};\n\nexport const deleteContactOperation = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  removeContacts(id)\n    .then(() => dispatch(deleteContactSucces(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from \"reselect\";\n\nexport const getAllContacts = (state) => state.contacts.items;\nexport const getFilterState = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilterState],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter((el) =>\n      el.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ErrorPopup from \"../ErrorPopup/ErrorPopup\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport {\n  addContactsOperation,\n  getContactsOperation,\n} from \"../../redux/Contacts/contactsOperations\";\nimport { getAllContacts } from \"../../redux/Contacts/contactsSelectors\";\nimport styles from \"../PhonebookForm/phonebookForm.module.css\";\n\nfunction PhonebookForm({ getContacts, onSubmit, sameContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [errorSameName, setErrorSameName] = useState(false);\n  const [errorName, setErrorName] = useState(false);\n  const [errorNumber, setErrorNumber] = useState(false);\n\n  useEffect(() => {\n    getContacts();\n  }, [getContacts]);\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      setErrorName(true);\n      setTimeout(() => {\n        setErrorName(false);\n      }, 3000);\n      return;\n    }\n\n    if (number.length === 0) {\n      setErrorNumber(true);\n      setTimeout(() => {\n        setErrorNumber(false);\n      }, 3000);\n      return;\n    }\n\n    const result = sameContact.find((el) => el.name === name);\n\n    if (result) {\n      setErrorSameName(true);\n      setTimeout(() => {\n        setErrorSameName(false);\n      }, 3000);\n      return;\n    }\n\n    onSubmit({ name, number });\n    return reset();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        console.log(\"No such type of data\");\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <Form className={styles.form} onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Add your contact</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Name\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Enter number</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Phone number\"\n            mask=\"+380\"\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"dark\" block>\n          Add contact\n        </Button>\n      </Form>\n      {/* <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          {\" \"}\n          <span className={styles.name}>Name</span>\n          <input\n            className={styles.input}\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            placeholder=\"enter name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          {\" \"}\n          <span className={styles.number}>Number</span>\n          <input\n            className={styles.input}\n            name=\"number\"\n            type=\"number\"\n            value={number}\n            placeholder=\"enter number\"\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className=\"btn btn-success\">\n          Add contact\n        </button>\n      </form> */}\n      <CSSTransition\n        in={errorName}\n        unmountOnExit\n        timeout={3000}\n        classNames={styles}\n      >\n        <ErrorPopup text=\"Please enter name\" />\n      </CSSTransition>\n      <CSSTransition\n        in={errorNumber}\n        unmountOnExit\n        timeout={3000}\n        classNames={styles}\n      >\n        <ErrorPopup text=\"Please enter number\" />\n      </CSSTransition>\n      <CSSTransition\n        in={errorSameName}\n        timeout={250}\n        classNames={styles}\n        unmountOnExit\n      >\n        <ErrorPopup text=\"this contact already exists \" />\n      </CSSTransition>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  sameContact: getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (value) => dispatch(addContactsOperation(value)),\n  getContacts: () => dispatch(getContactsOperation()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styles from \"../ContactList/contactList.module.css\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { deleteContactOperation } from \"../../redux/Contacts/contactsOperations\";\nimport { getVisibleContacts } from \"../../redux/Contacts/contactsSelectors\";\n\nfunction Card({ arr, onDel }) {\n  return (\n    <div className={styles.container}>\n      <TransitionGroup component=\"ul\">\n        {arr.map(({ id, name, number }) => {\n          return (\n            <CSSTransition key={id} timeout={3000} classNames={styles}>\n              <li className={styles.item}>\n                <h3 className={styles.name}>{name} </h3>\n                <a className={styles.number} href=\"tel:{number}\">\n                  {number}\n                </a>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => {\n                    onDel(id);\n                  }}\n                  type=\"button\"\n                >\n                  delite\n                </button>\n              </li>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  arr: PropTypes.array.isRequired,\n  onDel: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  arr: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDel: (id) => dispatch(deleteContactOperation(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport styles from \"../Filter/filter.module.css\";\nimport { filterContact } from \"../../redux/Contacts/contactAction\";\nimport { getFilterState } from \"../../redux/Contacts/contactsSelectors\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <span className={styles.label}>Find contacts by name</span>\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        placeholder=\"find name\"\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: getFilterState(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) => dispatch(filterContact(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport PhonebookForm from \"../PhonebookForm/PhonebookForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport filterStyles from \"./main.module.css\";\nimport { getAllContacts } from \"../../redux/Contacts/contactsSelectors\";\n\nfunction Main({ contacts }) {\n  return (\n    <>\n      <PhonebookForm />\n      <CSSTransition\n        in={contacts.length > 0}\n        classNames={filterStyles}\n        timeout={250}\n        unmountOnExit\n      >\n        <div>\n          {\" \"}\n          <h2>Contacts</h2>\n          <Filter />\n        </div>\n      </CSSTransition>\n      <ContactList />\n    </>\n  );\n}\n\nMain.propTypes = {\n  contacts: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getAllContacts(state),\n});\n\nexport default connect(mapStateToProps, null)(Main);\n"],"sourceRoot":""}