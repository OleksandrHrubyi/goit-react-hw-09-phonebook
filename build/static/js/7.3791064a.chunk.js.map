{"version":3,"sources":["components/Login/Login.js","components/ErrorPopup/ErrorPopup.jsx","components/ErrorPopup/errorPopup.module.css","components/Login/login.module.css"],"names":["mapDispatchToProps","onLogin","loginUser","connect","state","error","getErrorMessage","useState","email","setEmail","password","setPassword","setError","handleChange","event","target","name","value","console","log","className","styles","form","onSubmit","preventDefault","time","setTimeout","Group","controlId","Label","Control","type","onChange","placeholder","in","unmountOnExit","timeout","classNames","text","variant","ErrorPopup","popup","module","exports"],"mappings":"2PA2FA,IAIMA,EAAqB,CACzBC,QAASC,KAGIC,uBARS,SAACC,GAAD,MAAY,CAClCC,MAAOC,YAAgBF,MAOeJ,EAAzBG,EAzFf,YAA6B,IAAZF,EAAW,EAAXA,QAAW,EACAM,mBAAS,IADT,mBACnBC,EADmB,KACZC,EADY,OAEMF,mBAAS,IAFf,mBAEnBG,EAFmB,KAETC,EAFS,OAGAJ,oBAAS,GAHT,mBAGnBF,EAHmB,KAGZO,EAHY,KAiBpBC,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBC,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MACd,OAAQD,GACN,IAAK,QACHP,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MAEF,QACE,OAAOC,QAAQC,IAAI,0BAczB,OACE,eAAC,IAAD,CAAMC,UAAWC,IAAOC,KAAMC,SAXX,SAACT,GAEpB,GADAA,EAAMU,iBACFhB,GAASE,EAGX,OAFAT,EAAQ,CAAEO,QAAOE,WAAUL,UA7B7BI,EAAS,SACTE,EAAY,IAGK,IAACc,IA6BP,IA5BXb,GAAS,GACTc,YAAW,WACTd,GAAS,KACRa,IA6BH,UACE,eAAC,IAAKE,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAAC,IAAKC,MAAN,oBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLf,KAAK,QACLC,MAAOT,EACPwB,SAAUnB,EACVoB,YAAY,wBAIhB,eAAC,IAAKN,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAAC,IAAKC,MAAN,uBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,WACLf,KAAK,WACLC,MAAOP,EACPsB,SAAUnB,EACVoB,YAAY,gBAGhB,cAAC,IAAD,CACEC,GAAI7B,EACJ8B,eAAa,EACbC,QAAS,IACTC,WAAYhB,IAJd,SAME,cAAC,IAAD,CAAYiB,KAAM,sCAGpB,cAAC,IAAD,CAAQC,QAAQ,UAAUR,KAAK,SAA/B,0B,4DCtESS,IAZf,YAA+B,IAATF,EAAQ,EAARA,KACpB,OACE,qBAAKlB,UAAWC,IAAOoB,MAAvB,SACE,6BAAKH,Q,mBCJXI,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,0BAA0B,YAAc,gCAAgC,KAAO,yBAAyB,WAAa,iC,mBCAjLD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa","file":"static/js/7.3791064a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/User/userOperation\";\nimport { getErrorMessage } from \"../../redux/User/userSelectors\";\nimport ErrorPopup from \"../ErrorPopup/ErrorPopup\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./login.module.css\";\n\nfunction Login({ onLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const errorPopup = (time) => {\n    setError(true);\n    setTimeout(() => {\n      setError(false);\n    }, time);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        return console.log(\"No such type of data\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (email && password) {\n      onLogin({ email, password, error });\n      reset();\n      return;\n    }\n    errorPopup(2000);\n  };\n\n  return (\n    <Form className={styles.form} onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Login</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"Enter your email\"\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n        />\n      </Form.Group>\n      <CSSTransition\n        in={error}\n        unmountOnExit\n        timeout={3000}\n        classNames={styles}\n      >\n        <ErrorPopup text={\"Please enter email or password!\"} />\n      </CSSTransition>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Login\n      </Button>\n    </Form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  error: getErrorMessage(state),\n});\n\nconst mapDispatchToProps = {\n  onLogin: loginUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import styles from \"./errorPopup.module.css\";\nimport PropTypes from \"prop-types\";\nfunction ErrorPopup({ text }) {\n  return (\n    <div className={styles.popup}>\n      <h1>{text}</h1>\n    </div>\n  );\n}\n\nErrorPopup.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default ErrorPopup;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"errorPopup_popup__1LU-F\",\"enter\":\"errorPopup_enter__1A6xR\",\"enterActive\":\"errorPopup_enterActive__LO9Qe\",\"exit\":\"errorPopup_exit__ZiYjm\",\"exitActive\":\"errorPopup_exitActive__3eRCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__1XT1R\",\"enter\":\"login_enter__8q68c\",\"enterActive\":\"login_enterActive__3u2-r\",\"exit\":\"login_exit__q07Cm\",\"exitActive\":\"login_exitActive__3Suc7\"};"],"sourceRoot":""}