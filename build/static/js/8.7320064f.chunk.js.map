{"version":3,"sources":["components/ErrorPopup/errorPopup.module.css","components/Registr/registr.module.css","components/ErrorPopup/ErrorPopup.jsx","components/Registr/Registr.jsx"],"names":["module","exports","ErrorPopup","text","className","styles","popup","mapDispatchToProps","onSubmit","registerUser","connect","useState","name","setName","email","setEmail","password","setPassword","error","setError","handleChange","event","target","value","console","log","Form","preventDefault","time","setTimeout","Group","controlId","Label","Control","type","onChange","placeholder","Text","CSSTransition","in","unmountOnExit","timeout","classNames","Button","variant","block"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,0BAA0B,YAAc,gCAAgC,KAAO,yBAAyB,WAAa,iC,oBCAjLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,uBAAuB,YAAc,6BAA6B,KAAO,sBAAsB,WAAa,8B,gICavLC,MAZf,YAA+B,IAATC,EAAQ,EAARA,KACpB,OACE,qBAAKC,UAAWC,IAAOC,MAAvB,SACE,6BAAKH,O,kBCqGX,IAAMI,EAAqB,CACzBC,SAAUC,KAGGC,sBAAQ,KAAMH,EAAdG,EArGf,YAAgC,IAAbF,EAAY,EAAZA,SAAY,EACLG,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEHF,mBAAS,IAFN,mBAEtBG,EAFsB,KAEfC,EAFe,OAGGJ,mBAAS,IAHZ,mBAGtBK,EAHsB,KAGZC,EAHY,OAIHN,oBAAS,GAJN,mBAItBO,EAJsB,KAIfC,EAJe,KAmBvBC,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBV,EADsB,EACtBA,KAAMW,EADgB,EAChBA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACEC,QAAQC,IAAI,0BAclB,OACE,eAACC,EAAA,EAAD,CAAMlB,SAXa,SAACa,GAEpB,GADAA,EAAMM,iBACFf,GAAQE,GAASE,EAGnB,OAFAR,EAAS,CAAEI,OAAME,QAAOE,aAzB1BH,EAAQ,IACRE,EAAS,SACTE,EAAY,IAVK,IAACW,IAqCP,IApCXT,GAAS,GACTU,YAAW,WACTV,GAAS,KACRS,IAqCH,UACE,eAACF,EAAA,EAAKI,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,mBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLtB,KAAK,OACLW,MAAOX,EACPuB,SAAUf,EACVgB,YAAY,uBAGhB,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,4BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,QACLtB,KAAK,QACLW,MAAOT,EACPqB,SAAUf,EACVgB,YAAY,gBAEd,cAACV,EAAA,EAAKW,KAAN,CAAWjC,UAAU,aAArB,+DAIF,eAACsB,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,WACLtB,KAAK,WACLW,MAAOP,EACPmB,SAAUf,EACVgB,YAAY,gBAGhB,cAACE,EAAA,EAAD,CACEC,GAAIrB,EACJsB,eAAa,EACbC,QAAS,IACTC,WAAYrC,IAJd,SAME,cAAC,EAAD,CAAYF,KAAK,0CAGnB,cAACwC,EAAA,EAAD,CAAQC,QAAQ,OAAOV,KAAK,SAASW,OAAK,EAA1C","file":"static/js/8.7320064f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"errorPopup_popup__1LU-F\",\"enter\":\"errorPopup_enter__1A6xR\",\"enterActive\":\"errorPopup_enterActive__LO9Qe\",\"exit\":\"errorPopup_exit__ZiYjm\",\"exitActive\":\"errorPopup_exitActive__3eRCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registr\":\"registr_registr__1u2dT\",\"form\":\"registr_form__1pdG-\",\"enter\":\"registr_enter__wVoWS\",\"enterActive\":\"registr_enterActive__Tw0x7\",\"exit\":\"registr_exit__19_qs\",\"exitActive\":\"registr_exitActive__3mAVb\"};","import styles from \"./errorPopup.module.css\";\nimport PropTypes from \"prop-types\";\nfunction ErrorPopup({ text }) {\n  return (\n    <div className={styles.popup}>\n      <h1>{text}</h1>\n    </div>\n  );\n}\n\nErrorPopup.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default ErrorPopup;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { registerUser } from \"../../redux/User/userOperation\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport ErrorPopup from \"../ErrorPopup/ErrorPopup\";\nimport styles from \"./registr.module.css\";\n\nfunction Registr({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const errorPopup = (time) => {\n    setError(true);\n    setTimeout(() => {\n      setError(false);\n    }, time);\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        console.log(\"No such type of data\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name && email && password) {\n      onSubmit({ name, email, password });\n      reset();\n      return;\n    }\n    errorPopup(2000);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter your name\"\n        />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          placeholder=\"Enter email\"\n        />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n        />\n      </Form.Group>\n      <CSSTransition\n        in={error}\n        unmountOnExit\n        timeout={3000}\n        classNames={styles}\n      >\n        <ErrorPopup text=\"Please enter name, email, password!\" />\n      </CSSTransition>\n\n      <Button variant=\"dark\" type=\"submit\" block>\n        Submit\n      </Button>\n    </Form>\n  );\n}\n\nconst mapDispatchToProps = {\n  onSubmit: registerUser,\n};\n\nexport default connect(null, mapDispatchToProps)(Registr);\n"],"sourceRoot":""}